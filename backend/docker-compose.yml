version: '3.8'
services:

  user-microservice:
    image: user-microservice
    container_name: user-microservice-container
    ports:
      - "8080:8080"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

  product-microservice:
    image: product-microservice
    container_name: product-microservice-container
    ports:
      - "8081:8081"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

  media-microservice:
    image: media-microservice
    container_name: media-microservice-container
    ports:
      - "8082:8082"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - "27021:27017"
    networks:
      - buy01-network
    volumes:
      - mongo-volume:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    ports:
      - "9092:9092"
    networks:
      - buy01-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: '10000000'
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server=localhost:9092"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    ports:
      - "2181:2181"
    networks:
      - buy01-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: on-failure

volumes:
  mongo-volume:
    external: true

networks:
  buy01-network:
    driver: bridge
