version: '3.8'
services:

  user-microservice:
    build:
      context: ./backend
      dockerfile: user/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb

  product-microservice:
    build:
      context: ./backend
      dockerfile: product/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb

  media-microservice:
    build:
      context: ./backend
      dockerfile: media/Dockerfile
    ports:
      - "8082:8082"
    networks:
      - buy01-network
    depends_on:
      - kafka
      - mongodb

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      - buy01-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - buy01-network
    volumes:
      - mongodb-data:/data/db

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    networks:
      - buy01-network
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: '5000000'
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - buy01-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

networks:
  buy01-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
